1714313610
waR3U4bTeM%3A52787cc3750ff1375665915b961be8c9-22c94d718ab4c6c9a6d8bb3e95fc611d
s:12800:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:64:"MvcUI interface de démarrage
Dispatch vers le controller ad hoc";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:17:"Application MvcUI";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:6:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:5:"MvcUI";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:14:" * description";N;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:12:"Regis TEDONE";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:0:"";}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:5:"email";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:17:"syradev@proton.me";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:12:"Syradev 2023";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:4;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:72:"https://www.gnu.org/licenses/gpl-3.0.en.html  GNU General Public License";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:5;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:5:"1.0.0";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"22c94d718ab4c6c9a6d8bb3e95fc611d";s:39:" phpDocumentor\Reflection\Php\File name";s:13:"bootstrap.php";s:39:" phpDocumentor\Reflection\Php\File path";s:17:"app/bootstrap.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5812:"<?php
/**
 * MvcUI interface de démarrage
 * Dispatch vers le controller ad hoc
 *
 * Application MvcUI
 *
 * @package    MvcUI
 * @author     Regis TEDONE
 * @email      syradev@proton.me
 * @copyright  Syradev 2023
 * @license    https://www.gnu.org/licenses/gpl-3.0.en.html  GNU General Public License
 * @version    1.0.0
 */

use SYRADEV\app\MvcUIController;

// Instance la classe MvcUI
$mvcUI = MvcUIController::getInstance();

// Récupère l'url demandée
$requestUri = $_SERVER['REQUEST_URI'];

// Vérifie que la route existe et renvoi de son nom
$routeName = $mvcUI->getRouteName($requestUri);


//**************************************************
// Traitement de l'API Ajax *************************
//**************************************************
// Vérifie si la requête est une requête Ajax XmlHttpRequest
// Vérifiction du domaine enregistré
$requestIsAjax = $mvcUI->ajaxCheck() && $mvcUI->domainCheck();
if ($requestIsAjax) {
    // Récupération du flux de données JSON envoyé par le client
    $ajaxRequest = json_decode(file_get_contents('php://input'));

    // Vérification de la requête ajax avec son CSRF Token
    if ($mvcUI->validateAjaxRequest()) {

        // Le CSRF Token est valide
        // On ne spécifie aucun cache pour la réponse
        header("Cache-Control: no-store, no-transform, max-age=0, private");

        // Si la requête ajax reçue contient des paramètres
        if (isset($ajaxRequest) && !empty($ajaxRequest)) {

            // Routage de la demande
            switch ($requestUri) {

                /** Demande de connexion */
                case '/connect':
                    if (isset($ajaxRequest->type) && $ajaxRequest->type === 'cnx') {
                        if (isset($ajaxRequest->action) && $ajaxRequest->action === 'connect') {
                            if (isset($ajaxRequest->username) && isset($ajaxRequest->hash)) {
                                if (isset($_SESSION['mvcRoutes'][$routeName]['action']) && $_SESSION['mvcRoutes'][$routeName]['route'] === $requestUri) {
                                    $MvcUI = $_SESSION['mvcRoutes'][$routeName]['class']::getInstance();
                                    echo json_encode([
                                        'status' => 200,
                                        'action' => $ajaxRequest->action,
                                        'connected' => $MvcUI->{$_SESSION['mvcRoutes'][$routeName]['action']}([base64_decode($ajaxRequest->username), base64_decode($ajaxRequest->hash)])
                                    ]);
                                    exit();
                                }
                            }
                        }
                    }
                    break;

                /** Demande de déconnexion */
                case '/disconnect':
                    if (isset($ajaxRequest->type) && $ajaxRequest->type === 'cnx') {
                        if (isset($ajaxRequest->action) && $ajaxRequest->action === 'disconnect') {
                            if (isset($_SESSION['mvcRoutes'][$routeName]['action']) && $_SESSION['mvcRoutes'][$routeName]['route'] === $requestUri) {
                                $MvcUI = $_SESSION['mvcRoutes'][$routeName]['class']::getInstance();
                                echo json_encode([
                                    'status' => 200,
                                    'action' => $ajaxRequest->action,
                                    'disconnected' => $MvcUI->{$_SESSION['mvcRoutes'][$routeName]['action']}()
                                ]);
                                exit();
                            }
                        }
                    }
                    break;

                /** Demande d'un template partiel */
                case '/partial':
                    if (isset($ajaxRequest->type) && $ajaxRequest->type === 'srv') {
                        if (isset($ajaxRequest->partial)) {
                            $mvcUI = MvcUIController::getInstance();
                            echo json_encode([
                                'status' => 200,
                                'partial' => $mvcUI->renderPartial($ajaxRequest->partial)
                            ]);
                        }
                    }
                    break;
            }
        }
        // Si le CSRF Token n'est pas ou plus valide
    } else {

        // Routage de la demande
        switch ($requestUri) {
            case '/disconnect':
                echo json_encode([
                    'status' => 200,
                    'action' => 'disconnect',
                    'disconnected' => true
                ]);
                break;
            case '/partial':
                header("HTTP/1.1 401 Unauthorized");
                echo json_encode(['status' => 401]);
                break;
            default:
                header("HTTP/1.1 401 Unauthorized");
                break;
        }
        exit();
    }

//**************************************************
// Traitement des requêtes HTTP standard ************
//**************************************************
} else {
// Si la route n'existe pas
    if ($routeName === null) {
        header("HTTP/1.1 404 Not Found");
        header('Location:' . MvcUIController::getRoute('404'));
        exit();

        // Si la route existe
    } else {
        if ($_SESSION['mvcRoutes'][$routeName]['privacy'] === 'private') {
            if (!$mvcUI->isConnected()) {
                header('Location:' . MvcUIController::getRoute('login'));
                exit();
            }
        }
        $mvcUI = $_SESSION['mvcRoutes'][$routeName]['class']::getInstance();
        $mvcUI->{$_SESSION['mvcRoutes'][$routeName]['action']}();
    }
}";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";